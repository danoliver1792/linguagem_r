x <- c(12, 7, 3, 4, 2, 18, 2)
result.mean <- mean(x)
print(result.mean)
median.result <- median(x)
print(median.result)
y <- c(2, 4, 8, 10)
result.mean <- mean(y)
print(result.mean)
median.result <- median(y)
print(median.result)
z <- c(2, 2, 4, 6, 8, 8, 8)
A <- matrix(c(2, 4, 3))
B <- matrix(c(2, 3, 5, 4), nrow = 2, ncol = 2, byrow = TRUE)
D <- data.frame(B)
print(D)
C <- matrix(c(3, 5, 2, 8), nrow = 2, ncol = 2, byrow = TRUE))
clear
cls
exit
a <- (20 + 2)/3)^3
a <- ((20 + 2)/3)^3
print(a)
gy <- (1, 7, 4, 4.2, 19, 2, 20, -21, 48, -4)
gy <- c(1, 7, 4, 4.2, 19, 2, 20, -21, 48, -4)
median.result = median(gy)
print(median.result)
b <- ((20 + 7) / 3)^2
print(b)
mensagem <- 'Hello World'
print(mensagem)
print(mensagem)
# Meu primeiro código
?print
install.packages('ggplot2') # Instalando o pacote
library(ggplot2) # Carregando o pacote
# Vetores
cidade <- c(
'Brasilia',
'Rio de Janeiro',
'Sao Paulo',
'Curitiba'
)
cidade
temperatura <- c(32, 35, 22, 11)
regiao <- c(3, 1, 1, 2)
cidade[1]
temperatura[1:3]
cidade2
city <- cidade
city
temperatura[-2]
city[3] <- 'Belo Horizonte'
city
city[5] <- 'Salvador'
city
city <- NULL
city
uf <- factor(c('DF', 'SP', 'RJ', 'BA'))
pessoa <- list(sexo = 'M', cidade = 'Brasilia', idade = 20)
pessoa[1]
pessoa[3]
pessoa[[1]]
pessoa <- NULL
pessoa
df <- data.frame(cidade, temperatura)
df
df[1, 2]
m <- matrix(seq(1:9), nrow=3)
m
for (i in seq(12)) {
print(i)
}
while (1 <= 10){
print(i)
i += 1
while (1 <= 10){
print(i)
i = i + 1
}
while (i <= 10){
print(i)
i = i + 1
}
while (i <= 10){
print(i)
i = i + 1
}
while (i <= 10){
print(i)
i = i + 1
}
while (1 <= 10) {
print(i)
i = i + 1
}
while (i <= 10) {
print(i)
i = i + 1
}
if (x > 0) {
print('Numero positivo')
}
if (x>0) {
print('Numero positivo')
}
if (nota >= 7) {
print('Aluno aprovado')
} else if (nota > 5 && nota < 7) {
print('Aluno em recuperação')
} else {
print('Aluno reprovado')
}
nota = 4
if (nota >= 7) {
print('Aluno aprovado')
} else if (nota > 5 && nota < 7) {
print('Aluno em recuperação')
} else {
print('Aluno reprovado')
}
if ((num %% 2) == 0) {
print('Par')
} else {
print('Impar')
}
num = 3
par.impar(num)
par.impar <= function(num) {
if ((num %% 2) == 0) {
print('Par')
} else
print('Impar')
}
par.impar <= function(num) {
if ((num %% 2) == 0) {
return('Par')
} else
return('Impar')
}
if ((num %% 2) == 0) {
return('Par')
} else {
return('Impar')
}
par.impar <- function(num) {
if ((num %% 2) == 0) {
return('Par')
} else {
return('Impar')
}
}
num = 3
par.impar(num)
x <- seq(1:9)
matriz <- matrix(x, ncol=3)
matriz
result <- apply(matriz, 1, sum)
result
numeros.p <- c(2, 4, 6, 8, 10, 12)
numeros.i <- c(1, 3, 5, 7, 9, 11)
numeros <- list(numeros.p, numeros.i)
numeros
lapply(numeros, mean)
saplly(numeros, mean)
sapply(numeros, mean)
carros <- mtcars[,c(1, 2, 9)]
head(carros)
hist(carros$mpg)
plot(carros$mpg, carros$cyl) # Dispersão
hist(carros$mpg) # Histograma
library(ggplot2)
ggplot(carros, aes(am))+
geom_bar()
hist(carros$mpg) # Histograma
df1 <- data.frame(Produto = c(1, 2, 3, 5), Preco = c(15, 10, 25, 20))
head(df1)
df2 <- data.frame(Produto = c(1, 2, 3, 4), Nome = c('A', 'B', 'C', 'D'))
head(df2)
df3 <- left_join(df1, df2, 'Produto')
head(df3)
df3 <- left_join(df1, df2, "Produto")
head(df3)
df3 <- left_join(df1,df2,"Produto")
library(dplyr)
library('dplyr')
head(iris)
glimpse(iris)
head(iris)
library(tidyr)
install.packages('tidyr')
library(tidyr)
head(dfDate)
dfDate <- data.frame(Produto = c('A', 'B', 'C'),
A.2015 = c(10, 12, 20),
A.2016 = c(20, 25, 35),
A.2017 = c(15, 20, 30)
)
head(dfDate)
dfDate2 <- gather(dfDate, 'Ano', 'Quantidade', 2:4)
head(dfDate2)
dfDate3 <- separate(dfDate2, Ano, c('A', 'Ano'))
dfDate3 <- dfDate[-2]
dfDate3
# Carregando os dados
viagens <- read.csv(
file = 'C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv',
# Carregando os dados
viagens <- read.csv(
file = 'C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv',
# Carregando os dados
viagens <- read.csv(
file = 'C:/Users/User/Documents/R/viagem_publica/2022_viagem.csv',
sep = ';',
dec = ','
)
# Carregando os dados
viagens <- read.csv(
file = 'C:/Users/User/Documents/R/viagem_publica/2022_viagem.csv',
sep = ';',
dec = ','
)
# Carregando os dados
viagens <- read.csv(
file = 'C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv',
# Carregando os dados
viagens <- read.csv(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:\users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
# Carregando os dados
viagens <- read.csv(
file = "C:\Users\User\Documents\R\viagem_publica\2022_viagem.csv",
viagens <- read.csv('C:\Users\User\Documents\R\viagem_publica')
viagens <- read.csv('C:/Users/User/Documents/R/viagem_publica/2022_viagem.csv')
viagens <- read.csv('C:/Users/User/Documents/R/viagem_publica/2022_viagem.csv')
viagens <- read.csv('C:\\Users\\User\\Documents\\R\\viagem_publica')
# Carregando os dados
viagens <- read.csv(
file = "C:\\Users\\User\\Documents\\R\\viagem_publica\\2022_viagem.csv",
sep = ';',
dec = ','
)
# Carregando os dados
viagens <- read.csv(
file = "C:\\Users\\User\\Documents\\R\\viagem_publica\\2022_viagem.csv", header = TRUE,
sep = ';',
dec = ','
)
# Carregando os dados
viagens <- read.csv(
file = "C:/Users/User/Documents/R/viagem_publica/2022_viagem.csv", header = TRUE,
sep = ';',
dec = ','
)
# Vetor
escolaridade <- c('fundamental', 'medio', 'superior', 'medio', 'superior',
'fundamental')
print(escolaridade)
# Fator
escolaridadeFator <- as.factor(escolaridade)
print(escolaridade)
# Fator
escolaridadeFator <- as.factor(escolaridade)
print(escolaridade)
escolaridade[3]
# Vetor
escolaridade <- c('fundamental', 'medio', 'superior', 'medio', 'superior',
'fundamental')
print(escolaridade)
# Fator
escolaridadeFator <- as.factor(escolaridade)
print(escolaridade)
# Fator
escolaridadeFator <- as.factor(escolaridade)
print(escolaridadeFator)
escolaridade[3]
escolaridadeFator[3]
summary(escolaridade)
summary(escolaridadeFator)
table(escolaridade)
# Tensão elétrica em residências
tensaoCasas <- c(110, 220, 110, 110, 110, 110, 220)
print(tensaoCasas)
summary(tensaoCasas)
# Mesmo exemplo com fator
tensaoCasasFator <- as.factor(tensaoCasas)
print(tensaoCasasFator)
summary(tensaoCasasFator)
# Criando matriz 3x2
?matrix
# Criando matriz 3x2
matriz <- matrix(c(1, 5, 10, 30, 15, 8), nrow=3, ncol=2, byrow=TRUE)
print(matriz)
matriz <- matrix(c(4, 8, 12, 16, 20, 24), nrow=3, ncol=2, byrow=FALSE)
print(matriz)
# Criando matriz 2x3
matriz <- matrix(c(4, 8, 12, 16, 20, 24), nrow=2, ncol=3, byrow=TRUE)
print(matriz)
# Buscando elementos de uma matriz
matriz[2, 2]
matriz[3, 1]
matriz[2, 1]
vetorA <- c(2, 5, 8)
vetorB <- c(3, 6, 9)
matriz2 <- rbind(vetorA, vetorB)
matriz2
matriz2[2, 1]
# Outro método de criação
matriz3 <- matrix(2:9, ncol=2)
matriz3
# Número de linhas e colunas de uma matriz
dim(matriz3)
nrow(matriz3)
ncol(matriz3)
# Nomear linhas e colunas
dimnames(matriz3) <- list(c('Linha 1', 'Linha 2', 'Linha 3', 'Linha 4'),
c('Coluna 1', 'Coluna 2', 'Coluna 3'))
matriz3 # Distribuindo os números de 2 a 9 com duas colunas
# Nomear linhas e colunas
dimnames(matriz3) <- list(c('Linha 1', 'Linha 2', 'Linha 3', 'Linha 4'),
c('Coluna 1', 'Coluna 2'))
matriz3
c('Coluna 1', 'Coluna 2', 'Coluna 3', 'Coluna 4'))
c('Coluna 1', 'Coluna 2', 'Coluna 3'))
c('Coluna 1', 'Coluna 2', 'Coluna 3'))
matriz3
# Cálculos com matrizes
matriz <- matrix(2:13, nrow=4, byrow=FALSE,
dimnames=list(c('Linha 1', 'Linha 2', 'Linha 3', 'Linha 4'),
c('Coluna 1', 'Coluna 2', 'Coluna 3')))
matriz
produto <- 2 * matriz
produto
produto4 <- 4 * matriz
produto4
# Soma de matrizes
a <- matrix(c(1, 5, 15, 8), nrow=2, ncol=2, byrow=TRUE)
b <- matrix(c(2, 4, 6, 10), nrow=2, ncol=2, byrow=TRUE)
a
b
soma <- a + b
soma
sub <- a - b
sub
# Multiplicação de matrizes
produtoMatriz <- a %*% b
produtoMatriz
# Média entre as linhas de uma matriz
c <- matrix(c(1, 5, 15, 8), nrow=2, ncol=2, byrow=TRUE)
c
mediaColuna <- colMeans(c)
mediaLinha <- colMeans(c)
mediaLinha
mediaLinha <-rowMeans(c)
mediaLinha
mediaColuna <- colMeans(c)
mediaColuna
# Soma das linhas e colunas de uma matriz
somaLinha <- rowSums(c)
somaLinha
somaColuna <- colSums(c)
somaColuna
# Matriz de caracteres
d <- matrix(c('Segunda', 'Terca', 'Quarta', 'Quinta'), nrow=2, ncol=2, byrow=TRUE)
d
)
# Matriz de caracteres
d <- matrix(c('Segunda', 'Terca', 'Quarta', 'Quinta'), nrow=3, ncol=1, byrow=TRUE)
# Matriz de caracteres
d <- matrix(c('Segunda', 'Terca', 'Quarta', 'Quinta'), nrow=4, ncol=1, byrow=TRUE)
d
mesNumero <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
mesNome <- c('Janeiro', 'Fevereiro', 'Marco', 'Abril', 'Maio', 'Junho',
'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro')
data.frame(mesNumero, mesNome)
ano <- c(2021 * 12)
ano
data.frame(mesNumero, mesNome, ano)
mesNumero <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
mesNome <- c('Janeiro', 'Fevereiro', 'Marco', 'Abril', 'Maio', 'Junho',
'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro')
data.frame(mesNumero, mesNome)
ano <- c(2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
2021, 2021)
data.frame(mesNumero, mesNome, ano)
# Data Frames pertecentes ao R
df <- mtcars
df
view(df)
view(mtcars)
view(mtcars)
View(mtcars)
View(df)
data.frame(mesNumero, mesNome, ano)
# Para visualizar com View
dataFrame <- data.frame(mesNumero, mesNome, ano)
View(dataFrame)
df2 <- airquality
View(df2)
library(help = 'datasets')
df3 = iris
df3
View(df3)
# Valores dos números de linhas e colunas
nrow(df3)
ncol(df3)
dim(df3)
summary(df3)
# Listas
nomes <- c('Luciano', 'Joice', 'Pedro', 'Maria')
idade <- c(46, 18, 29, 42)
curso <- c('Python', 'R', 'Estatística', 'Machine Learning')
lista <- list(nomes, idade, curso)
print(lista)
lista[1]
lista[1] # Mostra o primeiro vetor
# Para instalar um pacote
install.packages('argo')
# Carregando um pacote
library(argo)
# Informações sobre um pacote
?argo
# Para remover um pacote
remove.packages('argo')
# Baixar pacotes, caso eles ainda não estejam baixados
if(!require(argo) install.packages('argo'))
# Baixar pacotes, caso eles ainda não estejam baixados
if(!require(argo)) install.packages('argo')
library(argo)
# Importação de Data Frames
setwd('C:\Users\User\Documents\R')
# Importação de Data Frames
setwd('C:/Users/User/Documents/R')
# Arquivo txt
df1 <- read.table('arquivo.txt')
# Arquivo xlsx
install.packages('readxl')
library(readxl)
